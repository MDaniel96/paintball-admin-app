// Generated by Dagger (https://dagger.dev).
package demo.app.paintball.activities;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import demo.app.paintball.data.mqtt.MqttService;
import demo.app.paintball.data.rest.RestService;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class JoinGameActivity_MembersInjector implements MembersInjector<JoinGameActivity> {
  private final Provider<RestService> restServiceProvider;

  private final Provider<MqttService> mqttServiceProvider;

  public JoinGameActivity_MembersInjector(Provider<RestService> restServiceProvider,
      Provider<MqttService> mqttServiceProvider) {
    this.restServiceProvider = restServiceProvider;
    this.mqttServiceProvider = mqttServiceProvider;
  }

  public static MembersInjector<JoinGameActivity> create(Provider<RestService> restServiceProvider,
      Provider<MqttService> mqttServiceProvider) {
    return new JoinGameActivity_MembersInjector(restServiceProvider, mqttServiceProvider);
  }

  @Override
  public void injectMembers(JoinGameActivity instance) {
    injectRestService(instance, restServiceProvider.get());
    injectMqttService(instance, mqttServiceProvider.get());
  }

  @InjectedFieldSignature("demo.app.paintball.activities.JoinGameActivity.restService")
  public static void injectRestService(JoinGameActivity instance, RestService restService) {
    instance.restService = restService;
  }

  @InjectedFieldSignature("demo.app.paintball.activities.JoinGameActivity.mqttService")
  public static void injectMqttService(JoinGameActivity instance, MqttService mqttService) {
    instance.mqttService = mqttService;
  }
}
